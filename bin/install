#!/usr/bin/env bash

install_MySQL() {
  local install_type=$1
  local version=$2
  local install_path=$3

  set -e

  MAJOR="$(echo $version | cut -d. -f1)"
  MINOR="$(echo $version | cut -d. -f2)"
  PATCH="$(echo $version | cut -d. -f3)"

  tmp_download_dir=$(mktemp -d)

  case "$(uname -s)" in
    Linux)
      FILE="mysql-${version}-linux*$(uname -m)*"
      ;;
    Darwin)
      if (( ${MAJOR} < 5 )); then
          echo "Error: Mysql v4.x and earlier are not supported on OS X"
          exit 1
      elif (( ${MAJOR} < 8 )); then
        # the mirrorservice listings for mysql-8.0 have updated to list macos11 as the OS association
        FILE="mysql-${version}.*"
      else
        case "$(uname -m)" in
          i386|x86_64)
            ARCH="x86_64"
            ;;
          *)
            ARCH="arm64"
            if (( ${MAJOR} < 8 )) || (( (( ${MAJOR} == 8 )) && (( ${PATCH} <= 25 )) )); then
              echo "Error: pre-built binaries are not available for ARM prior to 8.0.26"
              exit 1
            fi
            ;;
        esac

        MACOSVER="11"
        if (( ${MAJOR} >= 8 )) && (( ${PATCH} >= 29 )); then
          MACOSVER="12"
        fi
        FILE="mysql-${version}-macos${MACOSVER}-${ARCH}*"
      fi
      ;;
    FreeBSD)
      FILE="mysql-${version}-freebsd*"
      ;;
  esac

  # it's possible that a file is compressed under multiple schemes.
  # Choose the first one
  PATTERN="$(echo $FILE | sed -e 's/\*/.*./g')\.(zip|gz|xz)<\/a>"
  VERSION_URL="https://mirrorservice.org/sites/ftp.mysql.com/Downloads/MySQL-${MAJOR}.${MINOR}/"
  BINARY="$(curl -s "${VERSION_URL}/" | grep -iE $PATTERN | awk -F\" '{ print $6 }' | head -1)"
  curl -so "${tmp_download_dir}/${BINARY}" "${VERSION_URL}/${BINARY}"

  # running this in a subshell
  # because we don't want to disturb current working dir
  (
    cd $tmp_download_dir
    # MySQL randomly introduced a "-minimal" version for linux, so use
    # the largest target
    CFILE="$(ls -S *.{xz,gz,zip} 2>/dev/null | head -1)"
    case "$( echo $CFILE | awk -F. '{ print $NF }')" in
      gz)
        tar -xzf $CFILE
        ;;
      xz)
        tar -xJf $CFILE
        ;;
      zip)
        unzip -q $CFILE
        ;;
    esac
    DIR="$(ls -l | grep ^d | awk '{ print $NF }')"

    # There's a choice here, if the file was source only or binary
    if [[ -f "${DIR}/CMakeLists.txt" ]]; then
        cd "${DIR}/build"
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="${install_path}" ..
        make -j 4 install
    elif [[ -f "${DIR}/configure" ]]; then
        cd "${DIR}"
        ./configure --prefix="${install_path}"
        make -j 4 install
    else
      [[ -d "${install_path}" ]] && rm -rf "${install_path}"
      mv "${DIR}" "${install_path}"
    fi
  )

  # Cleanup
  rm -rf $tmp_download_dir

  # Help
  echo Successfully installed MySQL $version
  # TODO: Add more helpful stuff on configuring, etc
  case "$MAJOR" in
    8)
      echo "To initialize a new database:"
      echo "  asdf global mysql ${version}"
      echo "  export DATADIR=/path/to/data"
      echo "  mysqld --initialize-insecure --datadir=\$DATADIR"
      echo "  mysql_ssl_rsa_setup --datadir=\$DATADIR"
      echo "To run the server:"
      echo "  mysqld_safe --datadir=\$DATADIR"
      echo "To stop the server:"
      echo "  mysqladmin -u root shutdown"
      ;;
  esac
}

if [[ -z "$ASDF_INSTALL_TYPE" ]]; then
  echo "This command should not be run directly, only via asdf"
  exit 1
fi

install_MySQL $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
